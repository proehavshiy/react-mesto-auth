{"version":3,"sources":["components/Card.js","components/Main.js"],"names":["Card","card","onCardClick","onCardLike","onCardDelete","currentUser","React","useContext","CurrentUserContext","isOwn","owner","_id","isLiked","likes","some","item","className","src","link","alt","name","onClick","type","aria-label","length","Main","cards","onEditProfile","onAddPlace","onEditAvatar","about","avatar","style","backgroundImage","map"],"mappings":"2JAiDeA,MA9Cf,YAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAEvCC,EAAcC,IAAMC,WAAWC,KAG/BC,EAAQR,EAAKS,MAAMC,MAAQN,EAAYM,IAavCC,EAAUX,EAAKY,MAAMC,MAAK,SAAAC,GAC9B,OAAOA,EAAKJ,MAAQN,EAAYM,OAMlC,OACE,yBAAQK,UAAU,UAAlB,UACE,qBAAKA,UAAU,iBAAiBC,IAAKhB,EAAKiB,KAAMC,IAAKlB,EAAKmB,KAAMC,QApBpE,WACEnB,EAAYD,MAoBTQ,GACC,wBAAQO,UAAU,sCAAsCM,KAAK,SAASC,aAAW,8FAAmBF,QAhB1G,WACEjB,EAAaH,MAiBX,6BAAYe,UAAU,sBAAtB,UACE,oBAAIA,UAAU,sBAAd,SACGf,EAAKmB,OAER,sBAAKJ,UAAU,wBAAf,UACE,wBAAQA,UAAS,4CAAuCJ,EAbnC,qBAa0E,IAAOU,KAAK,SAASD,QA1B5H,WACElB,EAAWF,MA0BL,mBAAGe,UAAU,wBAAb,SACGf,EAAKY,MAAMW,mBCTTC,UA5Bf,YAA0G,IAA1FC,EAAyF,EAAzFA,MAAOC,EAAkF,EAAlFA,cAAeC,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,aAAc3B,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAEvF,EAAgCE,IAAMC,WAAWC,KAAzCY,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,OAErB,OACE,uBAAMf,UAAU,2CAAhB,UACE,0BAASA,UAAU,sDAAnB,UACE,qBAAKA,UAAU,0CAA0CgB,MAAO,CAAEC,gBAAgB,OAAD,OAASF,EAAT,MAAsBV,QAASQ,IAChH,sBAAKb,UAAU,gBAAf,UACE,oBAAIA,UAAU,iBAAd,SACGI,IAEH,wBAAQJ,UAAU,+DAA+DK,QAASM,EAAeL,KAAK,SAASC,aAAW,mKAClI,mBAAGP,UAAU,oBAAb,SACGc,GAAS,QAGd,wBAAQd,UAAU,6DAA6DK,QAASO,EAAYN,KAAK,SAASC,aAAW,8IAE/H,yBAASP,UAAU,yCAAnB,SACGU,EAAMQ,KAAI,SAACjC,GAAD,OACT,cAAC,EAAD,CAAqBA,KAAMA,EAAMC,YAAaA,EAAaC,WAAYA,EAAYC,aAAcA,GAAtFH,EAAKU","file":"static/js/3.f68b68fd.chunk.js","sourcesContent":["import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  //подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  //проверяем, наша ли карточка. нужен для добавнения кнопки удаления\n  const isOwn = card.owner._id === currentUser._id;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(item => {\n    return item._id === currentUser._id;\n  });\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `button-like_active`;\n\n  return (\n    <figure className=\"element\">\n      <img className=\"element__image\" src={card.link} alt={card.name} onClick={handleClick} />\n      {isOwn && (\n        <button className=\"element__button-delete page__button\" type=\"button\" aria-label=\"Удалить карточку\" onClick={handleDeleteClick} />\n      )}\n      <figcaption className=\"element__figcaption\">\n        <h2 className=\"element__card-title\">\n          {card.name}\n        </h2>\n        <div className=\"element__like-section\">\n          <button className={`element__button-like page__button ${isLiked ? (cardLikeButtonClassName) : ('')}`} type=\"button\" onClick={handleLikeClick} />\n          <p className=\"element__like-counter\">\n            {card.likes.length}\n          </p>\n        </div>\n      </figcaption>\n    </figure>\n  )\n}\n\nexport default Card;\n\n\n","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Card from './Card';\n\nfunction Main({ cards, onEditProfile, onAddPlace, onEditAvatar, onCardClick, onCardLike, onCardDelete }) {\n  //подписка на контекст\n  const { name, about, avatar } = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__block-alignment page__main\">\n      <section className=\"profile page__section page__animation page__profile\">\n        <div className=\"profile__avatar avatar-form-open-button\" style={{ backgroundImage: `url(${avatar})` }} onClick={onEditAvatar} />\n        <div className=\"profile__info\">\n          <h1 className=\"profile__title\">\n            {name}\n          </h1>\n          <button className=\"profile__change-button page__button profile-form-open-button\" onClick={onEditProfile} type=\"button\" aria-label=\"Кнопка Редактировать профиль\" />\n          <p className=\"profile__subtitle\">\n            {about || ''}\n          </p>\n        </div>\n        <button className=\"profile__add-button page__button add-card-form-open-button\" onClick={onAddPlace} type=\"button\" aria-label=\"Кнопка Добавить карточку\" />\n      </section>\n      <section className=\"elements page__section page__animation\">\n        {cards.map((card) => (\n          <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />\n        )\n        )}\n      </section>\n    </main>\n  )\n}\nexport default Main;\n\n/*\n{cards.map(({ _id, ...card }) => (\n        <Card key={_id} card={card} onCardClick={onCardClick} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n        )\n      )}\n*/\n"],"sourceRoot":""}